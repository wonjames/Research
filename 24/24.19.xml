<?xml version="1.0" encoding="UTF-8"?>
<section xml:id="C24.S19">
<title>Methods of Computation</title>        
 
<subsection xml:id="C24.S19.SS1">
<title>Bernoulli and Euler Numbers and Polynomials</title>        
     
<para xml:id="C24.S19.SS1.p1">

<sentence sentence-num-in-para="1" sentence-num-in-section="1" xml:id="C24.S19.SS1.p1.s1">
Equations (24.5.3) and (24.5.4) enable <Math mode="inline" xml:id="C24.S19.SS1.p1.m1">B_{n}</Math> and <Math mode="inline" xml:id="C24.S19.SS1.p1.m2">E_{n}</Math> to be computed by recurrence.
</sentence>

<sentence sentence-num-in-para="2" sentence-num-in-section="2" xml:id="C24.S19.SS1.p1.s2">
For higher values of <Math mode="inline" xml:id="C24.S19.SS1.p1.m3">n</Math> more efficient methods are available.
</sentence>

<sentence sentence-num-in-para="3" sentence-num-in-section="3" xml:id="C24.S19.SS1.p1.s3">
For example, the tangent numbers <Math mode="inline" xml:id="C24.S19.SS1.p1.m4">T_{n}</Math> can be generated by simple recurrence relations obtained from (24.15.3), then (24.15.4) is applied. A similar method can be used for the Euler numbers based on (4.19.5).
</sentence>

<sentence sentence-num-in-para="4" sentence-num-in-section="4" xml:id="C24.S19.SS1.p1.s4">
For details seeKnuth and Buckholtz (1967).
</sentence>

</para>
 
<para xml:id="C24.S19.SS1.p2">

<sentence sentence-num-in-para="1" sentence-num-in-section="5" xml:id="C24.S19.SS1.p2.s1">
Another method is based on the identities <Math equation-number="24.19.1" mode="display" xml:id="C24.S19.E1">N_{2n}=\frac{2(2n)!}{(2\pi)^{2n}}\left(\prod_{p-1\mathbin{|}2n}p\right)\left( \prod_{p}\frac{p^{2n}}{p^{2n}-1}\right),</Math> <Math equation-number="24.19.2" mode="display" xml:id="C24.S19.E2">D_{2n}=\prod_{p-1\mathbin{|}2n}p,B_{2n}=\dfrac{N_{2n}}{D_{2n}}</Math>.
</sentence>

<sentence sentence-num-in-para="2" sentence-num-in-section="6" xml:id="C24.S19.SS1.p2.s2">
If <Math mode="inline" xml:id="C24.S19.SS1.p2.m1">\widetilde{N}_{2n}</Math> denotes the right-hand side of (24.19.1) but with the second product taken only for <Math mode="inline" xml:id="C24.S19.SS1.p2.m2">p\leq\left\lfloor(\pi e)^{-1}2n\right\rfloor+1</Math> , then <Math mode="inline" xml:id="C24.S19.SS1.p2.m3">N_{2n}=\left\lceil\widetilde{N}_{2n}\right\rceil</Math> for <Math mode="inline" xml:id="C24.S19.SS1.p2.m4">n\geq 2</Math>.
</sentence>

<sentence sentence-num-in-para="3" sentence-num-in-section="7" xml:id="C24.S19.SS1.p2.s3">
For proofs and further information see Fillebrown (1992).
</sentence>

</para>
 
<para xml:id="C24.S19.SS1.p3">

<sentence sentence-num-in-para="1" sentence-num-in-section="8" xml:id="C24.S19.SS1.p3.s1">
For other information see Chellali (1988) andZhang and Jin (1996, pp. 1–11).
</sentence>

<sentence sentence-num-in-para="2" sentence-num-in-section="9" xml:id="C24.S19.SS1.p3.s2">
For algorithms for computing <Math mode="inline" xml:id="C24.S19.SS1.p3.m1">B_{n}</Math> , <Math mode="inline" xml:id="C24.S19.SS1.p3.m2">E_{n}</Math> , <Math mode="inline" xml:id="C24.S19.SS1.p3.m3">B_{n}\left(x\right)</Math> , and <Math mode="inline" xml:id="C24.S19.SS1.p3.m4">E_{n}\left(x\right)</Math> seeSpanier and Oldham (1987, pp. 37, 41, 171, and 179–180).
</sentence>

</para>
 
</subsection>
 
<subsection xml:id="C24.S19.SS2">
<title>Values of <Math mode="inline" xml:id="C24.S19.SS2.m1">B_{n}</Math> Modulo <Math mode="inline" xml:id="C24.S19.SS2.m2">p</Math></title>         
<para xml:id="C24.S19.SS2.p1">

<sentence sentence-num-in-para="1" sentence-num-in-section="10" xml:id="C24.S19.SS2.p1.s1">
For number-theoretic applications it is important to compute <Math mode="inline" xml:id="C24.S19.SS2.p1.m1">B_{2n}\pmod{p}</Math> for <Math mode="inline" xml:id="C24.S19.SS2.p1.m2">2n\leq p-3</Math> ; in particular to find theirregular pairs <Math mode="inline" xml:id="C24.S19.SS2.p1.m3">(2n,p)</Math> for which <Math mode="inline" xml:id="C24.S19.SS2.p1.m4">B_{2n}\equiv 0\pmod{p}</Math>.
</sentence>

<sentence sentence-num-in-para="2" sentence-num-in-section="11" xml:id="C24.S19.SS2.p1.s2">
We list here three methods, arranged in increasing order of efficiency.
</sentence>

<sentence sentence-num-in-para="3" sentence-num-in-section="12" xml:id="C24.S19.SS2.p1.s3">
Tanner and Wagstaff (1987) derives a congruence <Math mode="inline" xml:id="C24.S19.I1.i1.p1.m1">\pmod{p}</Math> for Bernoulli numbers in terms of sums of powers.
</sentence>

<sentence sentence-num-in-para="4" sentence-num-in-section="13" xml:id="C24.S19.SS2.p1.s4">
See also §24.10(iii).
</sentence>

<sentence sentence-num-in-para="5" sentence-num-in-section="14" xml:id="C24.S19.SS2.p1.s5">
Buhler et al. (1992) uses the expansion <Math equation-number="24.19.3" mode="display" xml:id="C24.S19.E3">\frac{t^{2}}{\cosh t-1}=-2\sum_{n=0}^{\infty}(2n-1)B_{2n}\frac{t^{2n}}{(2n)!}</Math> , and computes inverses modulo <Math mode="inline" xml:id="C24.S19.I1.i2.p1.m1">p</Math> of the left-hand side.
</sentence>

<sentence sentence-num-in-para="6" sentence-num-in-section="15" xml:id="C24.S19.SS2.p1.s6">
Multisectioning techniques are applied in implementations.
</sentence>

<sentence sentence-num-in-para="7" sentence-num-in-section="16" xml:id="C24.S19.SS2.p1.s7">
See alsoCrandall (1996, pp. 116–120).
</sentence>

<sentence sentence-num-in-para="8" sentence-num-in-section="17" xml:id="C24.S19.SS2.p1.s8">
A method related to “Stickelberger codes” is applied inBuhler et al. (2001); in particular, it allows for an efficient search for the irregular pairs <Math mode="inline" xml:id="C24.S19.I1.i3.p1.m1">(2n,p)</Math>.
</sentence>

<sentence sentence-num-in-para="9" sentence-num-in-section="18" xml:id="C24.S19.SS2.p1.s9">
Discrete Fourier transforms are used in the computations.
</sentence>

<sentence sentence-num-in-para="10" sentence-num-in-section="19" xml:id="C24.S19.SS2.p1.s10">
See also Crandall (1996, pp. 120–124).
</sentence>

</para>
 
</subsection>
 
</section>
